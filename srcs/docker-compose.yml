version: '3'
services:
  nginx:
    restart: always
    image: nginx
    container_name: nginx
    build: requirements/nginx
    networks:
      - server
      - manage-mysql
    ports:
      - 443:443
    volumes:
      - wordpress-volume:/var/www/html
    depends_on:
      - wordpress
      - adminer

  wordpress:
    restart: always
    image: wordpress
    container_name: wordpress
    build: requirements/wordpress
    env_file:
      - .env
    networks:
      - server
      - database
      - cache
    volumes:
      - wordpress-volume:/var/www/html
    depends_on:
      - redis
      - mariadb
      # mariadb:
      #   condition: service_healthy


  mariadb:
    restart: always
    image: mariadb
    container_name: mariadb
    build: requirements/mariadb
    env_file:
      - .env
    networks:
      - database
      - manage-mysql
    volumes:
      - mariadb-volume:/var/lib/mysql
    # healthcheck:
    #   test: mariadb -u${MYSQL_USER} -p${MYSQL_PASSWORD} -e use ${MYSQL_DATABASE}
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5

  redis:
    restart: always
    image: redis
    container_name: redis
    build: requirements/redis
    env_file:
      - .env
    networks:
      - cache
    volumes:
      - redis-volume:/data

  adminer:
    restart: always
    image: adminer
    container_name: adminer
    build: requirements/adminer
    networks:
      - manage-mysql


volumes:
  mariadb-volume:
    driver_opts:
      type: none
      o: bind
      device: "${DATA_PATH}/mysql"
  wordpress-volume:
    driver_opts:
      type: none
      o: bind
      device: "${DATA_PATH}/wordpress"
  redis-volume:
    driver_opts:
      type: none
      o: bind
      device: "${DATA_PATH}/redis"

networks:
  server:
    driver: bridge
  database:
    driver: bridge
  cache:
    driver: bridge
  manage-mysql:
    driver: bridge
